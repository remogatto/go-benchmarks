<div id="meta">
  <p id="x_label">GOMAXPROCS</p>
  <p id="y_label">Speedup</p>
</div>

<div class="description">
<p>
Calculate an approximated PI value using the following algorithm:
<ul>
  <li>Inscribe a circle in a square</li>
  <li>Randomly generate points in the square</li>
  <li>Determine the number of points in the square that are also in the circle</li>
  <li>Let r be the number of points in the circle divided by the number of points in the square</li>
  <li>PI ~ 4 r</li>
</ul>
</p>
<p>
For each program run, <%= @processes %> goroutines are spawned. Each goroutine randomly generate <i>iter</i> points in the square and check for points that are also in the circle. You may note that for low <i>iter</i> value the program doesn't scale so much. It seems that concurrency is better exploited when the load of work of the single goroutine increases (i.e. 10000 iterations per goroutine).
</p>
</div>
<table>
  <tr>
    <th>GOMAXPROCS</th>
    <th>Speedup 100 iter</th>    
    <th>Speedup 1000 iter</th>    
    <th>Speedup 10000 iter</th>
  </tr>
  <% @xvalues.zip(@yvalues['100'], @yvalues['1000'], @yvalues['10000']).each do |row| %>
  <%= "<tr>" %>
  <% row.each do |data| %>
  <%= "<td>#{data}</td>" %>
  <% end %>
  <%= "</tr>" %>
  <% end %>
</table>

<div id="info">

  <% system_info_link_path = File.join(File.basename(Dir.pwd), "system_info.html") %>
  
  <% Dir.glob("*_go.html").each do |fn| %>
  <% go_link_path = File.join(File.basename(Dir.pwd), fn) %>
  <a class="ceebox" href="<%= go_link_path %>" rel="iframe"><%= "#{fn.gsub(/_go.*/,'')}.go" %></a>
  <% end %>

  <a class="ceebox" href="<%= system_info_link_path %>" rel="iframe">System info</a>
</div>

